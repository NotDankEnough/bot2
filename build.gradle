plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id("io.micronaut.application") version "4.4.4"
    id("io.micronaut.aot") version "4.4.4"
}

group 'kz.ilotterytea'
version '1.5.0'

repositories {
    mavenCentral()

    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'com.github.twitch4j:twitch4j:1.23.0'
    implementation 'ch.qos.logback:logback-classic:1.5.13'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'org.jsoup:jsoup:1.15.3'
    implementation 'org.java-websocket:Java-WebSocket:1.5.3'
    implementation 'org.reflections:reflections:0.10.2'
    implementation 'com.google.guava:guava:32.0.0-android'
    implementation 'com.squareup.okhttp3:okhttp'
    implementation 'org.hibernate.orm:hibernate-core:6.2.0.Final'
    implementation 'org.postgresql:postgresql:42.7.2'
    implementation("com.github.ilotterytea:emotes4j:0.2.0")

    // Web related dependencies
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.views:micronaut-views-handlebars")
    compileOnly("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    testImplementation("io.micronaut:micronaut-http-client")
    implementation("com.vladsch.flexmark:flexmark-all:0.64.8")
}

test {
    useJUnitPlatform()
}

java {
    withSourcesJar()
}

application {
    mainClass = "kz.ilotterytea.bot.Main"
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("kz.ilotterytea.bot.*")
    }
    aot {
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        replaceLogbackXml = true
    }
}